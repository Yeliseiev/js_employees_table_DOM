{"version":3,"sources":["scripts/main.js"],"names":["titlesRow","document","querySelector","table","normalizeSalary","str","replace","sortTable","tableToSort","i","secondSort","sort","a","b","aValue","cells","innerText","bValue","localeCompare","row","children","addEventListener","e","index","sortedTable","target","cellIndex","asc","classList","value","toggle","remove","add","forEach","item","append","selectedRow","closest","el","form","createElement","inputNames","offices","createSelect","select","office","option","textContent","setAttribute","required","className","inputName","label","slice","toUpperCase","input","type","name","notification","title","description","message","innerHTML","body","setTimeout","notificationCheck","text","length","isNaN","button","inputsList","filter","map","lastChild","preventDefault","tr","td","Number","toLocaleString","selectedCell","inpuntCell","tableText","style","width","clientWidth","focus","push","key"],"mappings":";AAAA,aA8NA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5NA,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAQF,SAASC,cAAc,SAIrC,SAASE,EAAgBC,GAChBA,OAAAA,EAAIC,QAAQ,QAAS,IAG9B,SAASC,EAAUC,EAAaC,EAAGC,GAC1BF,OAAAA,EAAYG,KAAK,SAACC,EAAGC,GACpBC,IAAAA,EAASF,EAAEG,MAAMN,GAAGO,UACpBC,EAASJ,EAAEE,MAAMN,GAAGO,UAElBP,OAAAA,GACD,KAAA,EACIC,OAAAA,EACHO,EAASH,EACTA,EAASG,EACV,KAAA,EACIP,OAAAA,EACHN,EAAgBa,GAAUb,EAAgBU,GAC1CV,EAAgBU,GAAUV,EAAgBa,GAChD,QACSP,OAAAA,EACHO,EAAOC,cAAcJ,GACrBA,EAAOI,cAAcD,MAKjC,IAAME,EAAMnB,EAAUoB,SAAS,GAAGA,SAElCpB,EAAUqB,iBAAiB,QAAS,SAAAC,GAC5BC,IAEFC,EAFED,EAAQD,EAAEG,OAAOC,UACjBC,EAAML,EAAEG,OAAOG,UAAUC,MAG3BF,GAAAA,EACFH,EAAcjB,EAAcJ,EAAAA,EAAMiB,UAAWG,EAAOI,GACpDL,EAAEG,OAAOG,UAAUE,OAAO,WACrB,CACLN,EAAcjB,EAAcJ,EAAAA,EAAMiB,UAAWG,EAAOI,GAEjCR,IAHd,EAGcA,EAAAA,EAAAA,GAHd,IAGmB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,EAAA,MACjBS,UAAUG,OAAO,QAJnB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAMLT,EAAEG,OAAOG,UAAUI,IAAI,OAGzBR,EAAYS,QAAQ,SAAAC,GAAQ/B,OAAAA,EAAMgC,OAAOD,OAK3C/B,EAAMkB,iBAAiB,QAAS,SAAAC,GACxBc,IAAAA,EAAcd,EAAEG,OAAOY,QAAQ,MACbD,EAAYR,UAAUC,MAG1CO,EAAYR,UAAUG,OAAO,UAC7B,EAAI5B,EAAMiB,UAAUa,QAAQ,SAAAK,GAC5BA,EAAGV,UAAUG,OAAO,UACpBK,EAAYR,UAAUI,IAAI,cAMhC,IAAMO,EAAOtC,SAASuC,cAAc,QAC9BC,EAAa,CAAC,OAAQ,WAAY,SAAU,MAAO,UACnDC,EAAU,CAAhB,QAAA,YAAA,SAAA,WAAA,YAAA,iBAKA,SAASC,EAAad,GACde,IADqB,EACrBA,EAAS3C,SAASuC,cAAc,UAEjBE,EAAAA,EAAAA,GAHM,IAGG,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAnBG,IAAAA,EAAmB,EAAA,MACtBC,EAAS7C,SAASuC,cAAc,UAEtCM,EAAOjB,MAAQgB,EACfC,EAAOC,YAAcF,EACrBD,EAAOT,OAAOW,IARW,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAcpBF,OAHPA,EAAOI,aAAa,UAAWnB,GAC/Be,EAAOK,UAAW,EAEXL,EAhBTL,EAAKW,UAAY,oBAmBjB,IAAwBT,IAAAA,EAAAA,EAAAA,EAAAA,EAAY,EAAA,EAAA,OAAA,IAAA,CAAzBU,IAAAA,EAAN,EAAA,GACGC,EAAQnD,SAASuC,cAAc,SAMjCW,GAJJC,EAAML,YACFI,SAAAA,OAAAA,EAAUE,MAAM,EAAG,GAAGC,eAAgBH,OAAAA,EAAUE,MAAM,GAD1D,SAIkB,WAAdF,EAAAA,CAMEI,IAAAA,EAAQtD,SAASuC,cAAc,SAGjCe,EAAMC,KADI,QAAdL,GAAqC,WAAdA,EACN,SACA,OAEjBI,EAAME,KAAON,EACbI,EAAMP,aAAa,UAAWG,GAC9BI,EAAMN,UAAW,EACjBG,EAAMjB,OAAOoB,GACbhB,EAAKJ,OAAOiB,QAfVA,EAAMjB,OAAOQ,EAAaQ,IAC1BZ,EAAKJ,OAAOiB,GAmBhB,IAAMM,EAAe,SAACC,EAAOC,EAAaJ,GAClCK,IAAAA,EAAU5D,SAASuC,cAAc,OAEvCqB,EAAQX,UAA4BM,gBAAAA,OAAAA,GACpCK,EAAQb,aAAa,UAAW,gBAEhCa,EAAQC,UACAH,aAAAA,OAAAA,EACDC,kBAAAA,OAAAA,EAFP,YAKA3D,SAAS8D,KAAK5B,OAAO0B,GAErBG,WAAW,WAAMH,OAAAA,EAAQ9B,UAAU,MAGrC,SAASkC,EAAkBC,EAAMzD,GAC3B,OAACyD,EAQK,IAANzD,GAAWyD,EAAKC,OAAS,EACpBT,EACL,QACA,2CACA,SAIM,IAANjD,IAAYyD,EAAO,IAAMA,EAAO,IAAME,MAAMF,IACvCR,EACL,QACA,sCACA,SAIM,IAANjD,IAAW2D,MAAMhE,EAAgB8D,KAC5BR,EACL,QACA,kBACA,SA3BKA,EACL,UACA,sBACA,WAiCN,IAAMW,EAASpE,SAASuC,cAAc,UAEtC6B,EAAOtB,YAAc,gBACrBR,EAAKJ,OAAOkC,GAEZ,IAAMC,EAAa,EAAI/B,EAAKnB,UACzBmD,OAAO,SAAAjC,GAAMA,OAAAA,IAAO+B,IACpBG,IAAI,SAAAlC,GAAMA,OAAAA,EAAGmC,YAEhBJ,EAAOhD,iBAAiB,QAAS,SAAAC,GAC/BA,EAAEoD,iBAIG,IAFCC,IAAAA,EAAK1E,SAASuC,cAAc,MAEzB/B,EAAI,EAAGA,EAAI6D,EAAWH,OAAQ1D,IAAK,CACpC8C,IAAAA,EAAQe,EAAW7D,GACrByD,EAAOX,EAAM1B,MAEboC,IAA+B,IAA/BA,EAAkBC,EAAMzD,GAC1B,OAGImE,IAAAA,EAAK3E,SAASuC,cAAc,MAEf,WAAfe,EAAME,OACRS,EAAWW,IAAAA,OAAAA,OAAOX,GAAMY,eAAe,WAGzCF,EAAG7B,YAAcmB,EACjBS,EAAGxC,OAAOyC,GAGZzE,EAAMgC,OAAOwC,GAEbjB,EACE,UACA,qCACA,aAIJzD,SAAS8D,KAAK5B,OAAOI,GAIrBpC,EAAMkB,iBAAiB,WAAY,SAAAuB,GAC3BmC,IAAAA,EAAenC,EAAOnB,OACxBuD,EAAa/E,SAASuC,cAAc,SAClCyC,EAAYF,EAAa/D,UAEA,IAA3B+D,EAAarD,YACfsD,EAAarC,EAAa,WAG5BqC,EAAW9B,UAAY,aACvB8B,EAAWnD,MAAQoD,EACnBD,EAAWE,MAAMC,MAAQJ,EAAaK,YAAc,GAAK,KACzDL,EAAa/D,UAAY,GACzB+D,EAAa5C,OAAO6C,GAEpBA,EAAWK,QAEXL,EAAW3D,iBAAiB,OAAQ,WAC9BQ,IAAAA,EAAQmD,EAAWnD,OAEkC,IAArDoC,EAAkBpC,EAAOkD,EAAarD,aACxCG,EAAQoD,GAGqB,IAA3BF,EAAarD,YACfG,EAAQ,IAAMgD,OAAOzE,EAAgByB,IAAQiD,eAAe,UAG9DC,EAAa/D,UAAYa,EACzBmD,EAAWjD,WAGbiD,EAAW3D,iBAAiB,WAAY,SAACiE,GACtB,UAAbA,EAAKC,MACPR,EAAa/D,UAAYgE,EAAWnD,MAEX,KAArBmD,EAAWnD,QACbkD,EAAa/D,UAAYiE,GAE3BD,EAAWjD","file":"main.c4493dd5.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst titlesRow = document.querySelector('thead');\nconst table = document.querySelector('tbody');\n\n// Sorting by clicking on the title (in two directions)\n\nfunction normalizeSalary(str) {\n  return str.replace(/[$,]/g, '');\n}\n\nfunction sortTable(tableToSort, i, secondSort) {\n  return tableToSort.sort((a, b) => {\n    const aValue = a.cells[i].innerText;\n    const bValue = b.cells[i].innerText;\n\n    switch (i) {\n      case 3:\n        return secondSort\n          ? bValue - aValue\n          : aValue - bValue;\n      case 4:\n        return secondSort\n          ? normalizeSalary(bValue) - normalizeSalary(aValue)\n          : normalizeSalary(aValue) - normalizeSalary(bValue);\n      default:\n        return secondSort\n          ? bValue.localeCompare(aValue)\n          : aValue.localeCompare(bValue);\n    }\n  });\n}\n\nconst row = titlesRow.children[0].children;\n\ntitlesRow.addEventListener('click', e => {\n  const index = e.target.cellIndex;\n  const asc = e.target.classList.value;\n  let sortedTable;\n\n  if (asc) {\n    sortedTable = sortTable([...table.children], index, asc);\n    e.target.classList.toggle('ASC');\n  } else {\n    sortedTable = sortTable([...table.children], index, asc);\n\n    for (const cell of row) {\n      cell.classList.remove('ASC');\n    }\n    e.target.classList.add('ASC');\n  }\n\n  sortedTable.forEach(item => table.append(item));\n});\n\n// Select a row\n\ntable.addEventListener('click', e => {\n  const selectedRow = e.target.closest('tr');\n  const alreadySelected = selectedRow.classList.value;\n\n  alreadySelected\n    ? selectedRow.classList.remove('active')\n    : [...table.children].forEach(el => {\n      el.classList.remove('active');\n      selectedRow.classList.add('active');\n    });\n});\n\n// Add form\n\nconst form = document.createElement('form');\nconst inputNames = ['name', 'position', 'office', 'age', 'salary'];\nconst offices = [`Tokyo`, `Singapore`, `London`,\n  `New York`, `Edinburgh`, `San Francisco`];\n\nform.className = 'new-employee-form';\n\nfunction createSelect(value) {\n  const select = document.createElement('select');\n\n  for (const office of offices) {\n    const option = document.createElement('option');\n\n    option.value = office;\n    option.textContent = office;\n    select.append(option);\n  }\n\n  select.setAttribute('data-qa', value);\n  select.required = true;\n\n  return select;\n}\n\nfor (const inputName of inputNames) {\n  const label = document.createElement('label');\n\n  label.textContent = `\n    ${inputName.slice(0, 1).toUpperCase()}${inputName.slice(1)}:\n  `;\n\n  if (inputName === 'office') {\n    label.append(createSelect(inputName));\n    form.append(label);\n    continue;\n  }\n\n  const input = document.createElement('input');\n\n  inputName === 'age' || inputName === 'salary'\n    ? input.type = 'number'\n    : input.type = 'text';\n\n  input.name = inputName;\n  input.setAttribute('data-qa', inputName);\n  input.required = true;\n  label.append(input);\n  form.append(label);\n}\n\n// Notification\n\nconst notification = (title, description, type) => {\n  const message = document.createElement('div');\n\n  message.className = `notification ${type}`;\n  message.setAttribute('data-qa', 'notification');\n\n  message.innerHTML = `\n    <h2>${title}</h2>\n    <p>${description}</p>\n  `;\n\n  document.body.append(message);\n\n  setTimeout(() => message.remove(), 3000);\n};\n\nfunction notificationCheck(text, i) {\n  if (!text) {\n    return notification(\n      'Warning',\n      'Fill all the fields',\n      'warning'\n    );\n  }\n\n  if (i === 0 && text.length < 4) {\n    return notification(\n      'Error',\n      'The name must be at least 4 letters long',\n      'error'\n    );\n  }\n\n  if (i === 3 && (text < 18 || text > 90 || isNaN(text))) {\n    return notification(\n      'Error',\n      'Age must be between 18 and 90 years',\n      'error'\n    );\n  }\n\n  if (i === 4 && isNaN(normalizeSalary(text))) {\n    return notification(\n      'Error',\n      'Is not a number',\n      'error'\n    );\n  }\n\n  return true;\n}\n\n// Button on submit\n\nconst button = document.createElement('button');\n\nbutton.textContent = 'Save to table';\nform.append(button);\n\nconst inputsList = [...form.children]\n  .filter(el => el !== button)\n  .map(el => el.lastChild);\n\nbutton.addEventListener('click', e => {\n  e.preventDefault();\n\n  const tr = document.createElement('tr');\n\n  for (let i = 0; i < inputsList.length; i++) {\n    const input = inputsList[i];\n    let text = input.value;\n\n    if (notificationCheck(text, i) !== true) {\n      return;\n    }\n\n    const td = document.createElement('td');\n\n    if (input.name === 'salary') {\n      text = `$${Number(text).toLocaleString('en-US')}`;\n    }\n\n    td.textContent = text;\n    tr.append(td);\n  }\n\n  table.append(tr);\n\n  notification(\n    'Success',\n    'New employee is successfully added',\n    'success'\n  );\n});\n\ndocument.body.append(form);\n\n// Editing of table cells by double-clicking\n\ntable.addEventListener('dblclick', select => {\n  const selectedCell = select.target;\n  let inpuntCell = document.createElement('input');\n  const tableText = selectedCell.innerText;\n\n  if (selectedCell.cellIndex === 2) {\n    inpuntCell = createSelect('office');\n  }\n\n  inpuntCell.className = 'cell-input';\n  inpuntCell.value = tableText;\n  inpuntCell.style.width = selectedCell.clientWidth - 36 + 'px';\n  selectedCell.innerText = '';\n  selectedCell.append(inpuntCell);\n\n  inpuntCell.focus();\n\n  inpuntCell.addEventListener('blur', () => {\n    let value = inpuntCell.value;\n\n    if (notificationCheck(value, selectedCell.cellIndex) !== true) {\n      value = tableText;\n    }\n\n    if (selectedCell.cellIndex === 4) {\n      value = '$' + Number(normalizeSalary(value)).toLocaleString('en-US');\n    }\n\n    selectedCell.innerText = value;\n    inpuntCell.remove();\n  });\n\n  inpuntCell.addEventListener('keypress', (push) => {\n    if (push.key === 'Enter') {\n      selectedCell.innerText = inpuntCell.value;\n\n      if (inpuntCell.value === '') {\n        selectedCell.innerText = tableText;\n      }\n      inpuntCell.remove();\n    }\n  });\n});\n"]}